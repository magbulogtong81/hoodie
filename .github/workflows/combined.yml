name: combined builds

on:
  push:
    branches: [ "master", "github_actions" ]
  pull_request:
    branches: [ "master" ]


#this will cancel other running actions with the same yml
#helps lessen running actions and prevents action duplicates
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  #job 1
  android_template:
    runs-on: "ubuntu-20.04"
    name: android


    strategy:
      matrix:
        include:
        ####TEPMPLATES#####
          - name: Release build arm
            target: template_release
            arch: arm32

          - name: Release build arm64
            target: template_release
            arch: arm64

          - name: Release build x86
            target: template_release
            arch: x86_32

          - name: Release build x86_64
            target: template_release
            arch: x86_64

          ####EDITOR####
          - name: Editor build x86_64
            target: editor
            arch: x86_64

          - name: Editor build x86
            target: editor
            arch: x86_32

          - name: Editor build arm
            target: editor
            arch: arm32

          - name: Editor build arm64
            target: editor
            arch: arm64


    steps:
        #setup jdk 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      #setup this repo
      - uses: actions/checkout@v2



#this is probably the cause of compilation errors
#maybe theres's api changes that prevents it to compile
      # Clone GodotCPP
#      - uses: actions/checkout@v2
#        with:
#          repository: godotengine/godot-cpp
#          ref: ${{env.GODOT_BASE_BRANCH}}
#          path: godot-cpp


      - name: git submodule update
        run: git submodule update --init



      # Setup custom buildroot so we may use an old but compatible GLIBC version, while keeping recent toolchain.
      # This allows to make production builds that are compatible with older Linux distros.
      # TODO Enhancement: cache buildroot so future runs can use it?
      # TODO Enhancement: make buildroot setup a self-contained step. There are bits of setup elsewhere.
      #      Currently I also setup `PATH` in the Compilation step because modifications
      #      do not persist between steps (?). I also placed this step after checkout because the checkout step changes
      #      the working directory for all following steps.
      - name: Setup buildroot
        run: |
          wget https://download.tuxfamily.org/godotengine/toolchains/linux/x86_64-godot-linux-gnu_sdk-buildroot.tar.bz2
          tar -xjf x86_64-godot-linux-gnu_sdk-buildroot.tar.bz2
          cd x86_64-godot-linux-gnu_sdk-buildroot
          ./relocate-sdk.sh
          cd ..


      - name: setup ndk
        uses: nttld/setup-ndk@v1.5.0
        id: setup-ndk
        with:
          ndk-version: r23c
          add-to-path: true
          link-to-sdk: true



       #compile with scons
      - name: Compilation
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          PATH="${GITHUB_WORKSPACE}/x86_64-godot-linux-gnu_sdk-buildroot/bin:${ANDROID_NDK_HOME}/bin:$PATH"
          echo "PATH:  $PATH"
          scons verbose=yes warnings=extra platform=android target=${{matrix.target}} arch=${{matrix.arch}}

      #list all folders and subdirectories since I don't know which folder to upload
      - name: list files
        run: ls -ash *

      #upload artifact
      - uses: actions/upload-artifact@v4
        with:
          name: hoodie-${{matrix.target}}-${{matrix.arch}}-android
          path: demo/addons




  #job 2
  linux_template:
    runs-on: "ubuntu-20.04"
    name: linux


    strategy:
      matrix:
        include:
          - name: Editor
            precision: single
            target: editor
            arch: x86_64

          - name: Template
            precision: single
            target: template_release
            arch: x86_64


            #32-bit
          - name: Editor 32-bit
            precision: single
            target: editor
            arch: x86_32

          - name: Template 32-bit
            precision: single
            target: template_release
            arch: x86_32






    steps:
        #setup jdk 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      #setup this repo
      - uses: actions/checkout@v2



      # Setup custom buildroot so we may use an old but compatible GLIBC version, while keeping recent toolchain.
      # This allows to make production builds that are compatible with older Linux distros.
      # TODO Enhancement: cache buildroot so future runs can use it?
      # TODO Enhancement: make buildroot setup a self-contained step. There are bits of setup elsewhere.
      #      Currently I also setup `PATH` in the Compilation step because modifications
      #      do not persist between steps (?). I also placed this step after checkout because the checkout step changes
      #      the working directory for all following steps.
      - name: Setup buildroot
        env:
          ARCH: ${{matrix.arch}}
        run: |
          if [[ "$ARCH" == "x86_32" ]]; then
            ARCH="i686"
          fi
          wget "https://download.tuxfamily.org/godotengine/toolchains/linux/${ARCH}-godot-linux-gnu_sdk-buildroot.tar.bz2"
          tar -xjf "${ARCH}-godot-linux-gnu_sdk-buildroot.tar.bz2"
          cd "${ARCH}-godot-linux-gnu_sdk-buildroot"
          ./relocate-sdk.sh
          cd ..

#this is probably the cause of compilation errors
#maybe theres's api changes that prevents it to compile
      # Clone GodotCPP
#      - uses: actions/checkout@v2
#        with:
#          repository: godotengine/godot-cpp
#          ref: ${{env.GODOT_BASE_BRANCH}}
#          path: godot-cpp


      - name: git submodule update
        run: git submodule update --init



       #compile with scons
      - name: Compilation
        env:
          ARCH: ${{matrix.arch}}
        run: |
          if [[ "$ARCH" == "x86_32" ]]; then
            ARCH="i686"
          fi
          PATH="${GITHUB_WORKSPACE}/${ARCH}-godot-linux-gnu_sdk-buildroot/bin:$PATH"
          echo "PATH: $PATH"
          scons verbose=yes platform=linux tests=no dev_build=no target=${{matrix.target}} precision=${{matrix.precision}} arch=${{matrix.arch}} CFLAGS='-fpermissive'


      #list all folders and subdirectories since I don't know which folder to upload
      - name: list files
        run: ls -ash *

      #upload artifact
      - uses: actions/upload-artifact@v4
        with:
          name: hoodie-${{matrix.target}}-${{matrix.arch}}-linux
          path: demo/addons






  #job 3
  macos_template:
    runs-on: "macos-latest"
    name: macos


    strategy:
      matrix:
        include:
          - name: Editor x86_64
            precision: single
            target: editor
            arch: x86_64

          - name: Template x86_64
            precision: single
            target: template_release
            arch: x86_64

          - name: Editor arm64
            precision: single
            target: editor
            arch: arm64

          - name: Template arm64
            precision: single
            target: template_release
            arch: arm64



    steps:
        #setup jdk 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      #setup this repo
      - uses: actions/checkout@v2



      # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'

      # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          python --version
          scons --version


#this is probably the cause of compilation errors
#maybe theres's api changes that prevents it to compile
      # Clone GodotCPP
#      - uses: actions/checkout@v2
#        with:
#          repository: godotengine/godot-cpp
#          ref: ${{env.GODOT_BASE_BRANCH}}
#          path: godot-cpp


      - name: git submodule update
        run: git submodule update --init

       #compile with scons
      - name: Compilation
        run: |
          scons verbose=yes platform=macos tests=no dev_build=no target=${{matrix.target}} precision=${{matrix.precision}} arch=${{matrix.arch}} CFLAGS='-fpermissive'


      #list all folders and subdirectories since I don't know which folder to upload
      - name: list files
        run: ls -ash *

      #upload artifact
      - uses: actions/upload-artifact@v4
        with:
          name: hoodie-${{matrix.target}}-${{matrix.arch}}-macos
          path: demo/addons





  #job 4
  windows_template:
    runs-on: "windows-latest"
    name: windows


    strategy:
      matrix:
        include:
          - name: Editor 64-bit
            precision: single
            target: editor
            arch: x86_64

          - name: Template 64-bit
            precision: single
            target: template_release
            arch: x86_64

          - name: Editor 32-bit
            precision: single
            target: editor
            arch: x86_32

          - name: Template 32-bit
            precision: single
            target: template_release
            arch: x86_32



    steps:
        #setup jdk 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      #setup this repo
      - uses: actions/checkout@v2



      # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons pywin32
          python --version
          scons --version


#this is probably the cause of compilation errors
#maybe theres's api changes that prevents it to compile
      # Clone GodotCPP
#      - uses: actions/checkout@v2
#        with:
#          repository: godotengine/godot-cpp
#          ref: ${{env.GODOT_BASE_BRANCH}}
#          path: godot-cpp


      - name: git submodule update
        run: git submodule update --init

       #compile with scons
      - name: Compilation
        run: |
          scons verbose=yes platform=windows tests=no dev_build=no target=${{matrix.target}} precision=${{matrix.precision}} arch=${{matrix.arch}}

      #list all folders and subdirectories since I don't know which folder to upload
      - name: list files
        run: tree /f

      #upload artifact
      - uses: actions/upload-artifact@v4
        with:
          name: hoodie-${{matrix.target}}-${{matrix.arch}}-windows
          path: demo/addons






  merge_artifacts:
      runs-on: ubuntu-latest
      permissions:
        contents: write
        
      needs: [ android_template, linux_template, macos_template, windows_template ]

      steps: 
        - name: download artifacts to 1 folder
          uses: actions/download-artifact@v4
          with:
            name:
            path: build/addons/hoodie
            merge-multiple: true
        - run: ls -lash build/*


        #delete artifacts after we download it
        - name: delete artifact
          uses: geekyeggo/delete-artifact@v5
          with:
            name: hoodie-*


        - name: upload all as one zip
          uses: actions/upload-artifact@v4
          with:
            name: hoodie.zip
            path: build
