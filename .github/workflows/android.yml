name: android builds

on:
  push:
    branches: [ "master", "github_actions" ]
  pull_request:
    branches: [ "master" ]


#this will cancel other running actions with the same yml
#helps lessen running actions and prevents action duplicates
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-android
  cancel-in-progress: true

jobs:
  workflow_template:
    runs-on: "ubuntu-20.04"
    name: ${{matrix.name}}


    strategy:
      matrix:
        include:
        ####TEPMPLATES#####
          - name: Release build arm
            target: template_release
            arch: arm32

          - name: Release build arm64
            target: template_release
            arch: arm64

          - name: Release build x86
            target: template_release
            arch: x86_32

          - name: Release build x86_64
            target: template_release
            arch: x86_64

          ####EDITOR####
          - name: Editor build x86_64
            target: editor
            arch: x86_64

          - name: Editor build x86
            target: editor
            arch: x86_32

          - name: Editor build arm
            target: editor
            arch: arm32

          - name: Editor build arm64
            target: editor
            arch: arm64


    steps:
        #setup jdk 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      #setup this repo
      - uses: actions/checkout@v2



#this is probably the cause of compilation errors
#maybe theres's api changes that prevents it to compile
      # Clone GodotCPP
#      - uses: actions/checkout@v2
#        with:
#          repository: godotengine/godot-cpp
#          ref: ${{env.GODOT_BASE_BRANCH}}
#          path: godot-cpp


      - name: git submodule update
        run: git submodule update --init



      # Setup custom buildroot so we may use an old but compatible GLIBC version, while keeping recent toolchain.
      # This allows to make production builds that are compatible with older Linux distros.
      # TODO Enhancement: cache buildroot so future runs can use it?
      # TODO Enhancement: make buildroot setup a self-contained step. There are bits of setup elsewhere.
      #      Currently I also setup `PATH` in the Compilation step because modifications
      #      do not persist between steps (?). I also placed this step after checkout because the checkout step changes
      #      the working directory for all following steps.
      - name: Setup buildroot
        run: |
          wget https://download.tuxfamily.org/godotengine/toolchains/linux/x86_64-godot-linux-gnu_sdk-buildroot.tar.bz2
          tar -xjf x86_64-godot-linux-gnu_sdk-buildroot.tar.bz2
          cd x86_64-godot-linux-gnu_sdk-buildroot
          ./relocate-sdk.sh
          cd ..


      - name: setup ndk
        uses: nttld/setup-ndk@v1.5.0
        id: setup-ndk
        with:
          ndk-version: r23c
          add-to-path: true
          link-to-sdk: true



       #compile with scons
      - name: Compilation
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          PATH="${GITHUB_WORKSPACE}/x86_64-godot-linux-gnu_sdk-buildroot/bin:${ANDROID_NDK_HOME}/bin:$PATH"
          echo "PATH:  $PATH"
          scons verbose=yes warnings=extra platform=android target=${{matrix.target}} arch=${{matrix.arch}}

      #list all folders and subdirectories since I don't know which folder to upload
      - name: list files
        run: ls -ash *

      #upload artifact
      - uses: actions/upload-artifact@v4
        with:
          name: hoodie-${{matrix.target}}-${{matrix.arch}}-android
          path: demo/addons

